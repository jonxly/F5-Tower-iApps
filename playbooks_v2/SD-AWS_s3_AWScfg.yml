---
# [dec17] push config to AWS #s3
# Notes:
# - global vars r stored in e ./inventory/host_vars which is ref fr e hosts file
# - pass in lh1 (SDmDC) or lh2 (Ansible) on CLI
# - AWS credentials must be defined and populated (akey and skey) eg. in ansible-vault
#   eg. ansible-playbook xxx.yml --vault-id @.vault_pw -e @secure.yml

- name: "Push Config to AWS #s3"
  hosts: "{{ host }}"
  gather_facts: false
  connection: local

#  vars:
#    bip_SG_filter: "SDmDC*"
#    vpc: "vpc-f3599794"  # SDmDC VPC
#    secgrp: SD-SG-HZ
#    LCname: SD-LC-HZ
#    ASGname: SD-ASG-HZ
#    sshkp: SDmDC-KP
#    subnet: "subnet-f5f37ebc" # pub subnet in VPC, SDmDC-pub-subnet
#    pooltag: SD-HZ

  environment:
    AWS_ACCESS_KEY: "{{ akey }}"
    AWS_SECRET_KEY: "{{ skey }}"
    AWS_REGION: "ap-southeast-1"  # SG

  tasks:
  - name: get facts
    ec2_group_facts:
      filters:
        group-name: "{{ bip_SG_filter }}"
    register: SGfacts
  - set_fact:
      bip_SG: "{{ SGfacts.security_groups[0].group_id }}"

  - name: create secgrp
    ec2_group:
      name: "{{ secgrp }}"
      description: "secgrp for hackazon backend"
      vpc_id: "{{ vpc }}"
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          group_id: "{{ bip_SG }}"
        ## rm for lh1
        - proto: tcp
          ports:
          - 22
          group_name:
          - JT-secgrp-tower
          - JT-secgrp-bastion
      tags:
        Name: "{{ secgrp }}"

  #- name: deploy EC2
  #  ec2:
  #    instance_type: t2.micro
  #    image: ami-900169ec
  #    vpc_subnet_id: subnet-f5f37ebc  # SDmDC-pub-subnet
  #    key_name: SDmDC-KP
  #    group: "{{ secgrp }}"
  #    instance_tags:
  #      Name: SD-HZ

  - name: create LC
    ec2_lc:
      name: "{{ LCname }}"
      image_id: ami-900169ec  # pts to hackazon AMI
      instance_type: t2.micro
      key_name: "{{ sshkp }}"
      state: present
      security_groups: "{{ secgrp }}"

  - name: create ASG
    ec2_asg:
      name: "{{ ASGname }}"
      launch_config_name: "{{ LCname }}"
      availability_zones: ap-southeast-1a
      vpc_zone_identifier: "{{ subnet }}"
      default_cooldown: 180
      health_check_period: 180
      max_size: 5
      min_size: 0
      desired_capacity: 1
      tags:
      - Name: "{{ pooltag }}"
        propagate_at_launch: yes
